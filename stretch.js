function _classPrivateFieldGet(receiver,privateMap){if(!privateMap.has(receiver)){throw new TypeError("attempted to get private field on non-instance");}return privateMap.get(receiver).value;}function _classPrivateFieldSet(receiver,privateMap,value){if(!privateMap.has(receiver)){throw new TypeError("attempted to set private field on non-instance");}var descriptor=privateMap.get(receiver);if(!descriptor.writable){throw new TypeError("attempted to set read only private field");}descriptor.value=value;return value;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};var ownKeys=Object.keys(source);if(typeof Object.getOwnPropertySymbols==="function"){ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable;}));}ownKeys.forEach(function(key){_defineProperty(target,key,source[key]);});}return target;}function injectStylesheet(elementId,stylesheet){const styleElement=document.createElement("style");styleElement.id=elementId;styleElement.innerHTML=stylesheet;$(styleElement).appendTo("head");return styleElement;}function indexedRemoveFromArray(array,element){const index=array.indexOf(element);if(index!=-1)array.splice(index,1);return index;}function removeFromArray(array,element){return indexedRemoveFromArray(array,element)!==-1;}function unloadAction(action){delete BarItems[action.id];for(const toolbar of action.toolbars){let idx=0;while(idx<toolbar.children.length){const item=toolbar.children[idx];if(item===action||item.id===action){toolbar.children.splice(idx,1);if(removeFromArray(item.toolbars,toolbar)){const position=parseInt(Object.entries(toolbar.positionLookup).find(([_,item1])=>item1===action)[0]);if(position!==undefined){if(toolbar.postload===undefined)toolbar.postload=[];toolbar.postload.push([action.id,position]);}}}else idx++;}toolbar.update();}if(removeFromArray(Keybinds.actions,action)){const category=action.category;const structCategoryActions=Keybinds.structure[category].actions;removeFromArray(structCategoryActions,action);if(structCategoryActions.length==0)delete Keybinds.structure[category];}Object.keys(action).forEach(prop=>delete action[prop]);action.id="DISABLED";}class SwathePlugin{register(autoHook=true,hookOpts){const bindHandlers=["oninstall","onuninstall","onload","onunload"];for(const bindHandler of bindHandlers)if(this.options[bindHandler]!==undefined)this.options[bindHandler]=this.options[bindHandler].bind(this);if(autoHook){this.registerEvent("onload",{before:()=>this.hook(hookOpts),after:this.postInit.bind(this)});this.registerEvent("onunload",{after:this.unhook.bind(this)});}Plugin.register(this.id,this.options);}registerEvent(event,opts){const originalHandler=this.options[event];this.options[event]=function(){if(opts===null||opts=== void 0?void 0:opts.before)opts.before();if(originalHandler!==undefined)originalHandler();if(opts===null||opts=== void 0?void 0:opts.after)opts.after();};}hook(opts){if(opts===null||opts=== void 0?void 0:opts.stylesheet)injectStylesheet(`swathe-plugin-${this.id}`,opts.stylesheet);}postInit(){Object.values(Toolbars).forEach(toolbar=>{if(toolbar.postload)toolbar.update();});}unhook(){var ref;(ref=this.styleElement)===null||ref=== void 0?void 0:ref.remove();_classPrivateFieldGet(this,_actions).forEach(unloadAction);}createAction(id,opts){_classPrivateFieldGet(this,_actions).push(new Action(id,opts));}constructor(id,options,initOpts){_actions.set(this,{writable:true,value:[]});if(/[^a-z0-9_]/.test(id))throw new Error("Invalid plugin id! It must be alphanumeric and lowercase.");this.id=id;this.options=options;this.storage=initOpts===null||initOpts=== void 0?void 0:initOpts.storage;}}var _actions=new WeakMap();class Storage1{get(key){return _classPrivateFieldGet(this,_data)[key];}set(key,value){if(value===undefined)this.remove(key);else if(_classPrivateFieldGet(this,_data)[key]!==value){_classPrivateFieldGet(this,_data)[key]=value;this.persist();}}remove(key){if(delete _classPrivateFieldGet(this,_data)[key])this.persist();}persist(){localStorage.setItem(this.name,JSON.stringify(_classPrivateFieldGet(this,_data)));}static load(name){const jsonData=localStorage.getItem(name);return new Storage1(name,jsonData!==undefined?JSON.parse(jsonData):{});}constructor(name,data){_data.set(this,{writable:true,value:void 0});this.name=name;_classPrivateFieldSet(this,_data,data!==null&&data!== void 0?data:{});}}var _data=new WeakMap();const plugin=new SwathePlugin("stretch",{icon:"aspect_ratio",title:"Stretch",author:"Unoqwy",description:"Add missing actions to control screen space",variant:"both",onload:load},{storage:Storage1.load("swathe_stretch")});plugin.register(true,{stylesheet:".h-100-override{height:100% !important}"});function sidebarAction(id1,sides,changeState,opts){plugin.createAction(id1,_objectSpread({},opts,{category:"view",click:()=>{sides.map(side=>`show_${side}_bar`).forEach(side=>{Prop[side]=changeState=="toggle"?!Prop[side]:changeState;});resizeWindow();}}));}function toggleMenubar(visible){if(visible!==undefined)$("header").toggle(visible);else $("header").toggle();const hidden=!$("header").is(":visible");$("#page_wrapper").toggleClass("h-100-override",hidden);plugin.storage.set("menubar_hidden",hidden?true:undefined);}function load(){if(plugin.storage.get("menubar_hidden"))toggleMenubar(false);sidebarAction("toggle_left_sidebar",["left"],"toggle",{name:"Toggle Left Sidebar",icon:"chevron_left"});sidebarAction("toggle_right_sidebar",["right"],"toggle",{name:"Toggle Right Sidebar",icon:"chevron_right"});sidebarAction("hide_sidebars",["left","right"],false,{name:"Hide both sidebars",icon:"unfold_more"});sidebarAction("show_sidebars",["left","right"],true,{name:"Show both sidebars",icon:"unfold_less"});plugin.createAction("toggle_menubar",{name:"Toggle Menu Bar",icon:"menu_open",category:"view",click:()=>toggleMenubar()});}