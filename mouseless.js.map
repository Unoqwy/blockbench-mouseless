{"version":3,"sources":["/home/runner/work/blockbench-mouseless/blockbench-mouseless/src/index.ts"],"sourcesContent":["import { author, description } from \"@package-info\";\nimport { Plugin } from \"bb-types\";\n\nfunction removeFromArray<T>(elt: T, array: T[]): boolean {\n    const eltIndex = array.indexOf(elt);\n    if (eltIndex != -1) {\n        array.splice(eltIndex, 1);\n        return true;\n    }\n    return false;\n}\n\nfunction removeAction(action: Action) {\n    if (removeFromArray(action, Keybinds.actions)) {\n        const category = (action as any).category;\n        const structCategoryActions = Keybinds.structure[category].actions;\n        removeFromArray(action, structCategoryActions);\n        if (structCategoryActions.length == 0) {\n            delete Keybinds.structure[category];\n        }\n    }\n}\n\n/**\n * Keep track of injected actions to remove them on unload.\n */\nnamespace InjectionStore {\n    const actions: Action[] = [];\n\n    export function registerAction(action: Action) {\n        actions.push(action);\n    }\n\n    export function unhook() {\n        actions.forEach(removeAction);\n    }\n}\n\nfunction sidebarAction(id: string, sides: string[], changeState: boolean | \"toggle\", opts: Partial<ActionOptions>) {\n    InjectionStore.registerAction(\n        new Action(id, {\n            ...opts,\n            category: \"view\",\n            click: () => {\n                sides\n                    .map(side => `show_${side}_bar`)\n                    .forEach(side => {\n                        Prop[side] = changeState == \"toggle\" ? !Prop[side] : changeState;\n                    });\n                resizeWindow();\n            },\n        } as ActionOptions)\n    );\n}\n\nPlugin.register(\"mouseless\", {\n    icon: \"keyboard\",\n    title: \"Blockbench Mouseless\",\n    author: author,\n    description: description,\n    variant: \"both\",\n\n    onload: () => {\n        sidebarAction(\"toggle_left_sidebar\", [\"left\"], \"toggle\", {\n            name: \"Toggle Left Sidebar\",\n            icon: \"chevron-left\",\n        });\n        sidebarAction(\"toggle_right_sidebar\", [\"right\"], \"toggle\", {\n            name: \"Toggle Right Sidebar\",\n            icon: \"chevron-right\",\n        });\n        sidebarAction(\"hide_sidebars\", [\"left\", \"right\"], false, {\n            name: \"Hide both sidebars\",\n            icon: \"expand-arrows\",\n        });\n        sidebarAction(\"show_sidebars\", [\"left\", \"right\"], true, {\n            name: \"Show both sidebars\",\n            icon: \"compress-arrows\",\n        });\n    },\n    onunload: () => {\n        InjectionStore.unhook();\n    },\n});\n"],"names":[],"mappings":"knBAGS,eAAe,CAAI,GAAM,CAAE,KAAU,QACpC,QAAQ,CAAG,KAAK,CAAC,OAAO,CAAC,GAAG,KAC9B,QAAQ,EAAI,EAAE,EACd,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAE,CAAC,SACjB,IAAI,SAER,KAAK,WAGP,YAAY,CAAC,MAAc,KAC5B,eAAe,CAAC,MAAM,CAAE,QAAQ,CAAC,OAAO,SAClC,QAAQ,CAAI,MAAM,CAAS,QAAQ,OACnC,qBAAqB,CAAG,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,OAAO,CAClE,eAAe,CAAC,MAAM,CAAE,qBAAqB,KACzC,qBAAqB,CAAC,MAAM,EAAI,CAAC,QAC1B,QAAQ,CAAC,SAAS,CAAC,QAAQ,wDASpC,OAAO,aAEG,cAAc,CAAC,MAAc,EACzC,OAAO,CAAC,IAAI,CAAC,MAAM,mBADP,cAAc,CAAd,cAAc,UAId,MAAM,GAClB,OAAO,CAAC,OAAO,CAAC,YAAY,mBADhB,MAAM,CAAN,MAAM,IAPhB,cAAc,GAAd,cAAc,eAYf,aAAa,CAAC,EAAU,CAAE,KAAe,CAAE,WAA+B,CAAE,IAA4B,EAC7G,cAAc,CAAC,cAAc,KACrB,MAAM,CAAC,EAAE,kBACN,IAAI,EACP,QAAQ,EAAE,IAAM,EAChB,KAAK,MACD,KAAK,CACA,GAAG,CAAC,IAAI,GAAK,KAAK,EAAE,IAAI,CAAC,IAAI,GAC7B,OAAO,CAAC,IAAI,GACT,IAAI,CAAC,IAAI,EAAI,WAAW,GAAI,MAAQ,GAAI,IAAI,CAAC,IAAI,EAAI,WAAW,IAExE,YAAY,iBAMrB,QAAQ,EAAC,SAAW,GACvB,IAAI,EAAE,QAAU,EAChB,KAAK,EAAE,oBAAsB,EAC7B,MAAM,UACN,WAAW,uEACX,OAAO,EAAE,IAAM,EAEf,MAAM,MACF,aAAa,EAAC,mBAAqB,IAAG,IAAM,IAAG,MAAQ,GACnD,IAAI,EAAE,mBAAqB,EAC3B,IAAI,EAAE,YAAc,IAExB,aAAa,EAAC,oBAAsB,IAAG,KAAO,IAAG,MAAQ,GACrD,IAAI,EAAE,oBAAsB,EAC5B,IAAI,EAAE,aAAe,IAEzB,aAAa,EAAC,aAAe,IAAG,IAAM,GAAE,KAAO,GAAG,KAAK,EACnD,IAAI,EAAE,kBAAoB,EAC1B,IAAI,EAAE,aAAe,IAEzB,aAAa,EAAC,aAAe,IAAG,IAAM,GAAE,KAAO,GAAG,IAAI,EAClD,IAAI,EAAE,kBAAoB,EAC1B,IAAI,EAAE,eAAiB,MAG/B,QAAQ,MACJ,cAAc,CAAC,MAAM"}